### Starting build.
# Target: cli.mli.depends, tags: { package(ANSITerminal), package(csv), package(ounit2), debug, extension:mli, file:cli.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package csv -package ANSITerminal -modules cli.mli > cli.mli.depends # cached
# Target: cli.cmi, tags: { package(ANSITerminal), package(csv), package(ounit2), byte, compile, debug, extension:mli, file:cli.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package ounit2 -package csv -package ANSITerminal -o cli.cmi cli.mli # cached
# Target: cli.ml.depends, tags: { package(ANSITerminal), package(csv), package(ounit2), debug, extension:ml, file:cli.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package csv -package ANSITerminal -modules cli.ml > cli.ml.depends
# Target: cli.cmo, tags: { package(ANSITerminal), package(csv), package(ounit2), byte, compile, debug, extension:cmo, extension:ml, file:cli.cmo, file:cli.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package ounit2 -package csv -package ANSITerminal -o cli.cmo cli.ml
# Target: cli.byte, tags: { package(ANSITerminal), package(csv), package(ounit2), byte, debug, dont_link_with, extension:byte, file:cli.byte, link, ocaml, program, quiet, traverse }
ocamlfind ocamlc -linkpkg -g -package ounit2 -package csv -package ANSITerminal cli.cmo -o cli.byte
# Compilation successful.
